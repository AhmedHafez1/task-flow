// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  authoredTasks Task[]    @relation(name: "author")
  assignedTasks Task[]    @relation(name: "assignee")
  projects      Project[]

  @@map("users")
}

model Task {
  id        String     @id @default(cuid())
  title     String
  content   String?
  status    TaskStatus @default(TODO)
  priority  Priority   @default(LOW)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  // Relations
  authorId   String
  author     User    @relation(name: "author", fields: [authorId], references: [id])
  assigneeId String?
  assignee   User?   @relation(name: "assignee", fields: [assigneeId], references: [id])

  projectId String?
  project   Project? @relation(fields: [projectId], references: [id])

  @@map("tasks")
}

model Project {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  tasks Task[]

  ownerId String?
  owner   User?   @relation(fields: [ownerId], references: [id])

  @@map("projects")
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  IN_TEST
  IN_REVIEW
  DONE
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}
